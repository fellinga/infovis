// In the first step the nodeArray is 
// beeing generated by the function 
// createNodes. Afterwards we select the 
// id VIS from out html and append an 
// SVG object.
function setup(rawData) {
    var nodeData = createNodes(rawData);

    var pie = d3.pie()
        .sort(null)
        .value(function(d) { return d.count; });


    var arcs = g.selectAll(".arc")
        .data(pie(nodeData));

    const arcs_enter = arcs.enter().append("path")
        .attr("class","arc")
        .style("stroke", "white")

    const text_enter = arcs.enter().append("text")
      .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
      .attr("dy", "0.35em")
      .text((d) => d.count);

    arcs.merge(arcs_enter).attr("d", arc)
        .style("fill", (d,i) => color(i));

    arcs.merge(text_enter);

    arcs.exit().remove();

}

// generates nodes from raw csv data
// and return the array containing
// the objects.
function createNodes(rawData) {
    var myNodes = rawData.map(function(d)  {
        return {
            tag : d.tag,
            count : d.count,
            comment : d.comment,
            answer : d.answer,
            fav : d.fav,
            score : d.score,
            view : d.view
        };
    });
    return myNodes;
}

const width = 960;
const height = 960;

var vis = d3.select("#pieChart").append("svg")
    .attr("width", width)
    .attr("height", height);

const g = vis.append("g")
    .attr("transform", `translate(${width/2}, ${height/2})`);

const color = d3.scaleOrdinal(d3.schemeCategory10);

var radius = Math.min(width,height) / 2;

var arc = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(0);

var label = d3.arc()    
    .outerRadius(radius - 40)
    .innerRadius(radius - 40);

// Load the data to an array and
// send it to funtion setup
// -> this is also the entry point
d3.csv('data/test_short.csv', setup);
